{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["style","container","marginTop","marginLebel","display","fav","color","friends","App","React","useState","list","setList","isFav","renderItems","map","item","List","Item","Content","floated","Button","icon","Icon","name","onClick","id","items","filter","handleRemove","Header","Container","text","Segment","Group","as","attached","block","Input","fluid","iconPosition","label","tag","content","labelPosition","placeholder","onKeyPress","e","key","target","value","newList","concat","uuidv4","length","onChange","filteredList","divided","verticalAlign","Message","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kRAUMA,EAAQ,CACZC,UAAW,CACTC,UAAW,OAEbC,YAAa,CACXD,UAAW,MACXE,QAAS,SAEXC,IAAI,CACFC,MAAM,QAIJC,EAAU,GA8FDC,EA5FH,WAEV,MAAwBC,IAAMC,SAASH,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAwBH,IAAMC,UAAS,GAAvC,mBAAOG,EAAP,KAyBMC,GAzBN,KAyBoBH,EAAKI,KAAI,SAACC,GAC5B,OACE,eAACC,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKE,QAAN,CAAcC,QAAQ,QAAtB,UACE,cAACC,EAAA,EAAD,CAAQC,MAAI,EAAChB,MAAOO,EAAO,MAAQ,GAAnC,SACE,cAACU,EAAA,EAAD,CAAMC,KAAK,WAEb,cAACH,EAAA,EAAD,CAAQC,MAAI,EAACG,QAAS,kBAfT,SAACC,GACpB,IAAMC,EAAQhB,EAAKiB,QAAO,SAAAZ,GAAI,OAAIA,EAAKU,KAAOA,KAC9Cd,EAAQe,GAa0BE,CAAab,EAAKU,KAA9C,SACE,cAACH,EAAA,EAAD,CAAMC,KAAK,yBAGf,eAACP,EAAA,EAAKE,QAAN,WACE,cAACF,EAAA,EAAKa,OAAN,UAAcd,EAAKQ,OADrB,sBATcR,EAAKU,QAiBzB,OACE,cAACK,EAAA,EAAD,CAAWC,MAAI,EAAChC,MAAOA,EAAMC,UAA7B,SACE,eAACgC,EAAA,EAAQC,MAAT,WACE,cAACJ,EAAA,EAAD,CAAQK,GAAG,KAAKC,SAAS,MAAMC,OAAK,EAApC,yBAGA,cAACJ,EAAA,EAAD,CAASG,UAAQ,EAAjB,SACE,cAACE,EAAA,EAAD,CACEC,OAAK,EACLjB,KAAK,WACLkB,aAAa,OACbC,MAAO,CAAEC,KAAK,EAAMC,QAAS,cAC7BC,cAAc,QACdC,YAAY,yBACZC,WAxDa,SAACC,GACtB,GAAc,UAAVA,EAAEC,IAAiB,CACrB,GAAuB,KAAnBD,EAAEE,OAAOC,MAAc,CACzB,IAAMC,EAAUxC,EAAKyC,OAAO,CAAE1B,GAAI2B,cAAU7B,KAAMuB,EAAEE,OAAOC,QAC3DtC,EAAQuC,GAEVJ,EAAEE,OAAOC,MAAQ,SAqDf,cAACjB,EAAA,EAAD,CAASG,UAAQ,EAAjB,SAEoB,IAAhBzB,EAAK2C,OAAe,cAAChB,EAAA,EAAD,CAClBC,OAAK,EACLjB,KAAK,SACLkB,aAAa,OACbC,MAAO,CAAEC,KAAK,EAAMC,QAAS,aAC7BC,cAAc,QACdC,YAAY,gBACZU,SA1DS,SAACR,GACpB,IAAMS,EAAe7C,EAAKiB,QAAO,SAAAZ,GAAI,OAAIA,EAAKQ,OAASuB,EAAEE,OAAOC,SAChEtC,EAAQ4C,MAyDK,OAIT,cAACvB,EAAA,EAAD,UACE,cAAChB,EAAA,EAAD,CAAMwC,SAAO,EAACC,cAAc,SAA5B,SACmB,IAAhB/C,EAAK2C,OAAexC,EAAc,cAAC6C,EAAA,EAAD,CACjCrC,KAAK,QACLsC,OAAO,mBACPjB,QAAQ,iCChGPkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.e78777b1.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Container,\n  Header,\n  Segment,\n  Input,\n  Button, Icon, List, Message\n} from 'semantic-ui-react'\n\nconst style = {\n  container: {\n    marginTop: '2em'\n  },\n  marginLebel: {\n    marginTop: '5px',\n    display: 'block'\n  },\n  fav:{\n    color:'red'\n  }\n}\n\nconst friends = [];\n\nconst App = () => {\n\n  const [list, setList] = React.useState(friends);\n  const [isFav, setFav] = React.useState(false);\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      if (e.target.value !== '') {\n        const newList = list.concat({ id: uuidv4(), name: e.target.value});\n        setList(newList);\n      }\n      e.target.value = '';\n    }\n  }\n\n  const handleSearch = (e) => {\n    const filteredList = list.filter(item => item.name === e.target.value)\n    setList(filteredList);\n  }\n\n  const handleRemove = (id) => {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  \n\n\n  const renderItems = list.map((item) => {\n    return (\n      <List.Item key={item.id}>\n        <List.Content floated='right'>\n          <Button icon color={isFav? 'red' : ''}>\n            <Icon name='star' />\n          </Button>\n          <Button icon onClick={() => handleRemove(item.id)} >\n            <Icon name='trash alternate' />\n          </Button>\n        </List.Content>\n        <List.Content>\n          <List.Header>{item.name}</List.Header>\n          is your friend\n        </List.Content>\n      </List.Item>\n    )\n  });\n\n  return (\n    <Container text style={style.container}>\n      <Segment.Group>\n        <Header as='h4' attached='top' block>\n          Friend List\n       </Header>\n        <Segment attached>\n          <Input\n            fluid\n            icon='add user'\n            iconPosition='left'\n            label={{ tag: true, content: 'Add Friend' }}\n            labelPosition='right'\n            placeholder='Enter your friend name'\n            onKeyPress={handleKeyPress}\n          />\n        </Segment>\n        <Segment attached>\n          {\n            list.length !== 0 ? <Input\n              fluid\n              icon='search'\n              iconPosition='left'\n              label={{ tag: true, content: 'Search...' }}\n              labelPosition='right'\n              placeholder='Search Friend'\n              onChange={handleSearch}\n            /> : null\n          }\n\n        </Segment>\n        <Segment>\n          <List divided verticalAlign='middle'>\n            {list.length !== 0 ? renderItems : <Message\n              icon='inbox'\n              header='No Data in List!'\n              content='Add friend in list'\n            />}\n          </List>\n        </Segment>\n      </Segment.Group>\n    </Container>\n  )\n\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}